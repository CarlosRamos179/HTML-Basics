/*
    INTRODUCCION A CSS
    CSS contrala la apariencia de los bloques y elementos en HTML
    Esta conforado por un 'selector' y una 'declaracion' en {} donde estara una 'propiedad' y un 'valor'
    selector { propiedad: valor; }  separando mas de una propiedad por comas
    Puede haber mas de 1 selector que lleven la misma declaracion.

    Se usa la etiqueta <link href="path/to/css" type="text/css" rel="stylesheet"/> para ocupar un archivo CSS externo.
    Debe de ir dentro del bloque <head>
    Una pagina HTML puede tener linkeado mas de 1 archivo.
    Para usar CSS dentro del archivo HTML se usa la etiqueta <style type="text/css"></style> Pero no es recomendado.
    
    En CSS se usan diferentes selectores para elementos y bloques. Estos son sensibles a mayusculas y minusculas asi que 
    el nombre del selector debe coincidir exactamente con el del elemento, id o valor.
    Los mas comunes son:

    Universal               * {}                             selecciona todos los elementos de la pagina
    Por tipo                h1, h2, etc. {}                  selecciona la etiqueta con ese nombre
    Por clase      .nombreClase {} o p.nombreClase {}        selecciona el o los elementos con esa clase
    por id                   #id {}                          selecciona los elementos con un id especifico
    por elemento hijo       li>a {}                          selecciona solamente los elementos <a> que son hijo de un <li> pero ningun otro <a> en la pagina
    descendente             p a {}                           seleciona cualquier elemento <a> dentro de cualquier <p> aun cuando haya mas elementos anidados
    hermano adjacente       h1+p {}                          selecciona solo el primer <p> que sigue de un <h1> pero no otros <p>
    hermano general         h1~p {}                          selecciona a todos los <p> que sigan de un <h1> aunque no sea el elemento siguiente inmediato

    CSS funciona en cascada, es decir; Si hay 2 o mas selectores identicos que modifiquen un elemento, el que tomara precedencia sera el ultimo en orden descendente
    Tambien si una regla es mas espepcifica que otra habrá precedencia de lo especifico sobre lo general. Ejemplo <h1> es mas especifico que *.
    Se puede agregar '!important' despues del valor de una propiedad para indicar que se tome en cuenta mas que las otras propiedades de ese elemento
    Ej. p b {color: blue !important;} 

    Algunas propiedades que se aplican a elementos padre heredan estas propiedades a sus elementos hijos. Tal son el caso 
    de font-family, color, etc. pero algunos otros como padding, background, etc. no son heredados. Para hacer que un elemento
    herede de su elemento padre usamos el valor 'inherit' en la propiedad.

    Se pueden usar herramientas online para saber ocmo se veria tu pagina en diverentes OS y navegadores.
    Tambien puedes buscar en internet si encuentras algun bug que no deje que las cosas se vean como deberian.
*/

/* 
    Color
    El color en CSS se puede representar de 4 formas distintas: 
        Nombre del color Ej. 'red', 'DarkCyan', etc. hay 147 colores reconocidos por los navegadores
        Codigo hexadecimal: Cantidad de rojo, azul, y verde. Ej. #ee3e80
        Valor RGB: rgb(100, 70, 80). Numeros entre 0 y 255
        Valores HSL: hsl([0,360], [%], [%]) --> Solo en CSS3
        HSL es de Hue (representado en grados), Saturation, Lightness

        rgba(0,0,0,0.0) --> la 'a' es el valor alpha que indica la opacidad. Solo afecta al elemento actual y no a los hijos.
        hsla(0,%,%,0.0) --> funciona igual que rgba

        Matiz: técnicamente los colores pueden tener saturacion y brillo.
        La saturacion es la cantidad de gris que hay.
        El brillo es la cantidad de negro que hay.

    {
        color: VALUE;   --> color del texto
        background-color: VALUE --> color de fondo de la caja del elemento. El valor por defecto es transparente
        opacity: VALUE[0, 1] 
    }

    Texto
        Estilo
            Serif: Con estilo al final de los trazos de las letras
            Sans-serif: Letras gruesas
            Monospace: Delgadas, con buena alineacion. Se usan para escribir codigo

        El tamaños por defecto de la letra en lo navedgadores es de 16px.

        font-family: Se usa para especificar la tipografia, pero esta debe estar instalada en la pc del usuario.
        La siguiente propiedad para descargar la tipografia en la PC del usuario y usarla.
        @font-face{  
            font-family: 'tipografia'; --> Nombre con el que usaras la tipografia mas adelante
            src: url('path/tipografiaADescargar')
        }

        Cuando indiques diferentes formatos de tu tipografia, estos deben estar listados de la siguiente manera:
            1: eot 
            2: woff
            3: ttf/otf
            4: svg
        
        Otras propiedades del texto son:
            font-weight: normal, bold
            font-style: normal, italic, oblique
            text-transform: uppercase, lowercase, capitalize
            letter-spacing, word-spacing [ems]
            text-decoration: none, underline, overline, line-through, blink
            line-height [ems]
            text-align, vertical-align

            Puedes especificar Pseudo-elementos al final de un selector
            p.intro:first-letter
            p.intro:first-line

            Tambien puedes usar Pseudo clases que actuan como un valor extra del atributo de una clase
            selector:
                link --> Links que no han sido visitados
                visited --> links que ya fueron visitados
                hover --> cuando el cursor pasa por encima (no funciona en touchscrreens)
                active --> cuando se da click o se activa algo
                focus --> cuando estas listo para usar un elemwnto, Ej. escribir en un formulario
            Ej.
            a:hover{}

            Selectores de atributos
            Existencia  []      p[class]
            Igualdad    [=]     p[class="dog"] 
            Espacio     [~=]    p[class~="dog"] --> Cualquier elemento p que contenga un atriburo llamado class cuyo valor sea una lista de palabras separada por espacios y aparezca la palabra "dog".
            Prefijo     [^=]    p[attr^="d"] --> Cualquier elemento p que contenga un atributo que inicie con "d"
            Subcadena   [*=]    p[attr*="do"]
            Sufijo      [$=]    p[attr$="og"]

    BOX Model
        El tamaño de las cajas por defecto es tan grande como el contenido lo necesite.
        Se pueden utilizar las propiedades 'height' y 'width' para controlar manualmente el tamaño de las cajas
        'max-width', 'min-width', 'max-hight', y 'min-height' se utilizan para conservar la integridad del contenido en pantallas de distinto tamaño
        'overflow' con valores 'hidden' o 'scroll' cuando el contenido es mayor al de la caja

        Todas las cajas tienen 3 propiedades que podemos modificar: border, margin, y padding.
        Cuando utilizamos 'width' o 'height' estas 3 propiedades son modificadas

        border-width: thin/medium/thick  (se pueden usar pixeles pero no % con esta propiedad)
        border-top-width, border-left-width, etc.
        Ejemplo: border-width: 2px 1px 1px 2px;  (en orden de las agujas del reloj:  top, right, bottom, left)

        border-style: solid/dotted/dashed/groove/etc. 
        Se usa tambien border-top-style, etc. 
        Aqui no podemos especificar en una linea estilos diferentes de cada lado del borde.

        La propiedad 'border' te permite especificar la anchura, el estilo y el color (en ese orden) en una linea.
        Ejemplo: border: 3px dotted #0088dd;

        El valor de la propiedad de 'padding' no es heredado por elementos secundarios de la misma manera que el 
        valor de color de la propiedad de la familia de fuentes. Por lo que hay que especificarlo siempre para 
        cada elemento
        Ejemplo: padding: 10px 5px 3px 1px; (Orden de las manecillas del reloj)
        padding: 10px 20px; (left-right-padding = 10px, top-bottom-padding = 20px)

        El margen controla el espacio entre cajas
        Si una caja se encuentra encima de otra, los márgenes se colapsan, lo que significa que el más grande de los 
        dos se utilizará y se descartarán los más pequeños.
        Ejemplo margin: 1px 2px 3px 4px; (Orden de las manecillas del reloj)
        margin: 10px 20px; (left-right-margin = 10px, top-bottom-margin = 20px)
        'margin' tampoco es heredado por lo que debe especificarse para cada elemento que lo use

        Si quieres centrar una caja al centro puedes usar 'right-margin' y 'left-margin' con el valor de 'auto'

        Esta propiedad nos permite esconder elementos de la pagina o mostrarlos al mismo nivel 
        display: inline/block/inline-block/none 

        La propiedad 'visibility: hidden' permite esconder las cajas de la pagina pero dejando el espacio que ocuparian.

        CSS3
        border-image, box-shadow, border-radius nos serviran para la manipulacion y estilización de los bordes.

    Listas, tablas y formas
        list-style-type: [none, disc, circle, square] or [decimal, upper-alpha, etc.]
        list-style-image: url("..."); 
        list-style-position: [outside, inside]
        ej. list-style: inside circle https://... 

        Ej. Tabla
            body {
                font-family: Arial, Verdana, sans-serif;
                color: #111111;}
            table {
                width: 600px;}
            th, td {
                padding: 7px 10px 10px 10px;}
            th {
                text-transform: uppercase;
                letter-spacing: 0.1em;
                font-size: 90%;
                border-bottom: 2px solid #111111;
                border-top: 1px solid #999;
                text-align: left;}
            tr.even {
                background-color: #efefef;}
            tr:hover {
                background-color: #c3e6e5;}
        
        empty-cells: [show, hide, inherit]
        border-spacing: []px []px (horizontal y vertical)
        border-collapse: collapse (ignora las propiedades de empty-cells y border-spacing)

        cursor: [auto, crosshair, default, pointer, move, text, wait, help, url("cursor.gif");]
        
        para estilizar los formularios puedes utilizar http://formalize.me



        
